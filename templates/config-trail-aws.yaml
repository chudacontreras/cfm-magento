AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  This template creates a awsConfig and Cloudtrail
Parameters:
  OperatorEmail:
    Description: "Email address to notify when new logs are published."
    Type: String
    Default: jesus.contreras@escala24x7.com
  S3BucketCloudTrail:
    Description: S3 Bucket name to store CloudTrail logs.
    Type: String
    Default: logtrail
  S3BucketConfig:
    Description: S3 Bucket name to store Config logs.
    Type: String
Resources:
  CloudTrailBucket:
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketCloudTrail
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CloudTrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource:
              !Sub |-
              arn:aws:s3:::${CloudTrailBucket}
          -
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
              arn:aws:s3:::${CloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
  AuditSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Audit-Magento
      Subscription:
        -
          Endpoint:
            Ref: OperatorEmail
          Protocol: email
  AuditSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - Ref: "AuditSNSTopic"
      PolicyDocument:
        Version: "2008-10-17"
        Statement:
          -
            Sid: "AWSCloudTrailSNSPolicy"
            Effect: "Allow"
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
            Resource: !Ref AuditSNSTopic
            Action: "SNS:Publish"
  CloudWatchLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: magentoLogGroup
      RetentionInDays: 30
  IamRoleForCloudWatchLogs:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: magento-policy-loggroup
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !GetAtt CloudWatchLogGroup.Arn
  myTrail:
    DependsOn:
      - CloudTrailBucketPolicy
      - AuditSNSTopicPolicy
      - CloudWatchLogGroup
      - IamRoleForCloudWatchLogs
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName:
        Ref: CloudTrailBucket
      SnsTopicName:
        Fn::GetAtt:
          - AuditSNSTopic
          - TopicName
      IsLogging: true
      IsMultiRegionTrail: false
      CloudWatchLogsLogGroupArn: !GetAtt CloudWatchLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt IamRoleForCloudWatchLogs.Arn
      EventSelectors:
        - IncludeManagementEvents: true
          ReadWriteType: WriteOnly

  AWSConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref S3BucketConfig
      AccessControl: Private

  # Config
  ConfigRecorder:
    DependsOn: ConfigRole
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: default
      RecordingGroup:
        AllSupported: true
      RoleARN: !GetAtt [ConfigRole, Arn]

  DeliveryChannel:
    DependsOn:
      - AuditSNSTopic
      - AWSConfigBucket
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: Three_Hours
      S3BucketName:
        Ref: AWSConfigBucket
      SnsTopicARN:
        Ref: AuditSNSTopic
  ConfigRole:
    DependsOn:
      - AWSConfigBucket
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [config.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWSConfigRole']
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetBucketAcl
                Resource: !Join ['', ['arn:aws:s3:::', !Ref 'AWSConfigBucket']]
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Join ['', ['arn:aws:s3:::', !Ref 'AWSConfigBucket', /AWSLogs/,
                                      !Ref 'AWS::AccountId', /*]]
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control
              - Effect: Allow
                Action: config:Put*
                Resource: '*'
  AWSConfigRulecloudtrail:
    DependsOn:
      - ConfigRecorder
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cloudtrail-enabled
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED
  AWSConfigRuleencryptedvolumes:
    DependsOn:
      - ConfigRecorder
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: encrypted-volumes
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Volume"
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES
  AWSConfigRulerootaccountMFA:
    DependsOn:
      - ConfigRecorder
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: root-account-mfa-enabled
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED
  AWSConfigRuleeipattached:
    DependsOn:
      - ConfigRecorder
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: eip-attached
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Volume"
      Source:
        Owner: AWS
        SourceIdentifier: EIP_ATTACHED
  AWSConfigRuleeSSHrestricted:
    DependsOn:
      - ConfigRecorder
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: restricted-ssh
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::SecurityGroup"
      Source:
        Owner: AWS
        SourceIdentifier: INCOMING_SSH_DISABLED
